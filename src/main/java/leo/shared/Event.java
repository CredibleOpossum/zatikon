///////////////////////////////////////////////////////////////////////
// Name: Event
// Desc: An interface for events
// Date: 3/5/2009 - Gabe Jones
// TODO:
///////////////////////////////////////////////////////////////////////
package leo.shared;

// imports

public interface Event {

    /////////////////////////////////////////////////////////////////
    // Event types
    /////////////////////////////////////////////////////////////////
    short PREVIEW_ACTION = 0;
    short WITNESS_ACTION = 1;

    short PREVIEW_MOVE = 2;
    short WITNESS_MOVE = 3;

    short PREVIEW_DAMAGE = 4;
    short WITNESS_DAMAGE = 5;

    short PREVIEW_DEATH = 6;
    short WITNESS_DEATH = 7;

    short EVENT_COUNT = 8;


    /////////////////////////////////////////////////////////////////
    // Results
    /////////////////////////////////////////////////////////////////
    short PARRY = -3;
    short NONE = -4;
    short CANCEL = -5;
    short OK = -6;
    short TRUE = -7;
    short FALSE = -8;
    short DEAD = -9;
    short END = -10;


    /////////////////////////////////////////////////////////////////
    // Perform the event
    /////////////////////////////////////////////////////////////////
    short perform(Unit source, Unit target, short val1, short val2, short defaultResult);


    /////////////////////////////////////////////////////////////////
    // Get the event type
    /////////////////////////////////////////////////////////////////
    short getEventType();


    /////////////////////////////////////////////////////////////////
    // Get the owner
    /////////////////////////////////////////////////////////////////
    Unit getOwner();


    /////////////////////////////////////////////////////////////////
    // Get priority
    /////////////////////////////////////////////////////////////////
    int getPriority();
}
